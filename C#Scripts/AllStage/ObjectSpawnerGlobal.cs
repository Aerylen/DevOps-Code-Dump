using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class ObjectSpawnerGlobal : MonoBehaviour {

	public List<float> objectSpawnChance; // a list of percentages that correlate to crystal spawn rates
	public bool isSpawning; // is the spawner currently spawning
	public float minSpawnTime; // minimum time spent to spawn a new crystal
	public float maxSpawnTime; // maximum time spent to spawn a new crystal
	public ObjectType objectToSpawn;
	private GameControllerGlobal controller; // global game controller
	private List<GameObject> objects; // list of types of crystals

	public enum ObjectType {
		Crystal,
		Meteor,
		Fireball,
		Mine
	};

	int size;
	float stepX;
	float stepZ;

	public int[,] spawn;
	public List<int[,]> spawnPatterns;
	
	// Use this for initialization
	void Start () {
		controller = GameObject.FindGameObjectWithTag("GameController").GetComponent<GameControllerGlobal>();

		size = 10;
		spawn = new int[size,size];
		stepX = collider.bounds.size.x / size;
		stepZ = collider.bounds.size.z / size;
		spawnPatterns = new List<int[,]>();

		objects = new List<GameObject>();
		switch (objectToSpawn) {
		case ObjectType.Crystal:
			objects = controller.crystals;
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			break;
		case ObjectType.Fireball:
			objects = controller.fireballs;
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 1, 1, 1, 1, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
										{0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
										{0, 1, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 1, 0, 0, 0, 0, 1, 0},
										{0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 1, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
										{0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
										{0, 0, 0, 0, 0, 1, 1, 0, 0, 0},
										{0, 0, 0, 1, 1, 0, 0, 0, 0, 0},
										{0, 0, 1, 1, 0, 0, 0, 1, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			break;
		case ObjectType.Meteor:
			objects = controller.meteors;
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			break;
		case ObjectType.Mine:
			objects = controller.mines;
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 0, 1, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 1, 1, 0, 0, 0, 0, 0, 0, 0},
										{0, 1, 1, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 1, 1, 0},
										{0, 0, 0, 0, 0, 0, 0, 1, 1, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
										{0, 0, 0, 0, 1, 1, 1, 1, 0, 0},
										{0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
										{0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
										{0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
										{1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
										{0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 1, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 1, 1, 0},
										{0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 1, 1, 1, 1, 1, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			spawnPatterns.Add(new int[,]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
										{0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
										{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
										{0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
										{0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
										{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}});
			break;
		}

		StartCoroutine(SpawnRandomPattern());
	}

	public void StartSpawning() {
		isSpawning = true;
		StartCoroutine(SpawnRandomPattern());
	}

	int[,] GetPattern() {
		return spawnPatterns[Random.Range(0, spawnPatterns.Count)];
	}

	IEnumerator SpawnRandomPattern() {
		yield return new WaitForSeconds(Random.Range(minSpawnTime, maxSpawnTime));
		int[,] spawnPattern = GetPattern();
		GameObject spawn = null;

		float choice;

		Vector3 pos = new Vector3(transform.position.x - collider.bounds.size.x / 2, transform.position.y, transform.position.z - collider.bounds.size.z / 2);

		for (int i = 0; i < spawnPattern.GetLength(0); i++) {
			for (int j = 0; j < spawnPattern.GetLength(1); j++) {
				// choose object
				choice = Random.value * 100;
				for (int k = 0; k < objects.Count; k++) {
					if (choice < objectSpawnChance[k]) {
						spawn = objects[k];
						break;
					} else
						choice -= objectSpawnChance[k];
				}

				if (spawnPattern[i, j] == 1)
					Instantiate(spawn, pos, transform.rotation);

				pos.x += stepX;
			}
			pos.x = transform.position.x - collider.bounds.size.x / 2;
			pos.z += stepZ;
		}


		if (isSpawning)
			StartCoroutine(SpawnRandomPattern());
	}
	
	void OnTriggerEnter(Collider other) {
		if (other.tag == "Planet") {
			isSpawning = false; // stops spawning when planet hits spawner
		}
	}
}
